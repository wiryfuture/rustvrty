//! SeaORM Entity. Generated by sea-orm-codegen 0.10.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tokens")]
pub struct Model {
    #[sea_orm(
        primary_key,
        auto_increment = false,
        column_type = "Custom(\"uuid\".to_owned())"
    )]
    pub token_id: String,
    #[sea_orm(column_type = "Custom(\"uuid\".to_owned())")]
    pub user_id: String,
    pub expiration: DateTime,
    pub ip: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub user_agent: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::auth::Entity",
        from = "Column::UserId",
        to = "super::auth::Column::UserId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Auth,
}

impl Related<super::auth::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Auth.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
